/*
 * Default MercuryDB example build. Feel free to reuse this
 * for other projects. It should be as simple as changing the below
 * variables 'hgSchemaPackage' and 'hgDbPackage' to the correct package names.
 *
 * This build file assumes a default gradle java project structure.
 */

apply plugin: 'application'
mainClassName = "examples.app.Main"

project.ext.set('hgSchemaPackage', 'examples.schema')
project.ext.set('hgDbPackage', 'examples.db')
project.ext.set('hgAppPackage', 'examples.app')

sourceSets {
    schema {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.compileClasspath
    }
    db {
        compileClasspath += main.compileClasspath
        compileClasspath += schema.output 
    }
    main {
        compileClasspath += schema.output
        compileClasspath += db.output
    }
}

configurations {
    schemaCompile.extendsFrom mainCompile
    dbCompile.extendsFrom mainCompile
}

project.run.classpath += sourceSets.schema.output
project.run.classpath += sourceSets.db.output

dependencies {
    compile files('../external-libs/mercurydb-all.jar')
}

task clearDB(type: Delete) {
    delete 'src/main/java/' + hgDbPackage.replace('.', '/')
}

task generateTables(type: JavaExec) {
    classpath = sourceSets.schema.runtimeClasspath
    main = 'org.mercurydb.Main'
    args = [
        '-src', project.hgSchemaPackage,
        '-db', project.hgDbPackage,
        '-root', 'src/schema/java',
        '-dbdir', 'src/db/java'
    ]
}

//task compileTables(type: JavaCompile) {
//    classpath = sourceSets.main.compileClasspath
//    source = 'src/main/db'
//    destinationDir = sourceSets.main.output.classesDir
//}

task insertHooks(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.mercurydb.Main'
    args = [
        '-src', project.hgSchemaPackage,
        '-db', project.hgDbPackage,
        '-root', 'src/schema/java',
        '-ih', sourceSets.schema.output.classesDir
    ]
}

task newJar(type: Jar) {
    from sourceSets.main.output
}

generateTables.dependsOn compileSchemaJava
compileDbJava.dependsOn generateTables
insertHooks.dependsOn compileSchemaJava

clean.dependsOn clearDB
//classes.dependsOn clearDB
//generateTables.dependsOn classes
//compileTables.dependsOn generateTables
//insertHooks.dependsOn compileTables
//assemble.dependsOn insertHooks
//compileTestJava.dependsOn insertHooks
//run.dependsOn insertHooks
